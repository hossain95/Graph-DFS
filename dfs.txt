#include<bits/stdc++.h>
using namespace std;
vector<int>adlist[10000] = {};
bool visited[10000] = {};
vector<int>vect;
void dfs(int u)
{
    vect.push_back(u);
    visited[u] = true;
    for(int i = 0; i < adlist[u].size(); i++)
    {
        int v = adlist[u][i];
        if(visited[v] == false)
        {
            dfs(v);
        }
    }
}
int main()
{
    int node, edge;
    cin >> node >> edge;
    for(int i = 1; i <= edge; i++)
    {
        int x, y;
        cin >> x >> y;
        adlist[x].push_back(y);
        adlist[y].push_back(x); // undirected graph
    }
    for(int i = 1; i <= node; i++)
    {
        if(visited[i] == false)
        {
            dfs(i);
        }
    }
    for(int i = 0; i < vect.size(); i++)
    {
        cout << vect[i] << " ";
    }
    cout << endl;
    return 0;
}